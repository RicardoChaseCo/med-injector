{"ast":null,"code":"var _jsxFileName = \"/Users/jiangxingnandecomputer/Desktop/medical-history-API/client/src/InjectionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InjectionForm(props) {\n  _s();\n  const [type, setType] = useState('');\n  const [dose, setDose] = useState('');\n  const [userId, setUserId] = useState('');\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const injection = {\n      type: type,\n      dose: dose,\n      user_id: userId\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/api/injections', injection);\n      props.onAdd(response.data);\n      setType('');\n      setDose('');\n      setUserId('');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \"Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"type\",\n        value: type,\n        onChange: event => setType(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dose\",\n        children: \"Dose:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"dose\",\n        value: dose,\n        onChange: event => setDose(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_id\",\n        children: \"User ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_id\",\n        value: userId,\n        onChange: event => setUserId(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Injection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(InjectionForm, \"Xor69URPs+ckolTowucwFKPbW5g=\");\n_c = InjectionForm;\nexport default InjectionForm;\nvar _c;\n$RefreshReg$(_c, \"InjectionForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","InjectionForm","props","_s","type","setType","dose","setDose","userId","setUserId","handleSubmit","event","preventDefault","injection","user_id","response","post","onAdd","data","error","console","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/jiangxingnandecomputer/Desktop/medical-history-API/client/src/InjectionForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction InjectionForm(props) {\n  const [type, setType] = useState('');\n  const [dose, setDose] = useState('');\n  const [userId, setUserId] = useState('');\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const injection = {\n      type: type,\n      dose: dose,\n      user_id: userId\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/api/injections', injection);\n      props.onAdd(response.data);\n      setType('');\n      setDose('');\n      setUserId('');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"type\">Type:</label>\n        <input type=\"text\" id=\"type\" value={type} onChange={event => setType(event.target.value)} />\n      </div>\n      <div>\n        <label htmlFor=\"dose\">Dose:</label>\n        <input type=\"text\" id=\"dose\" value={dose} onChange={event => setDose(event.target.value)} />\n      </div>\n      <div>\n        <label htmlFor=\"user_id\">User ID:</label>\n        <input type=\"text\" id=\"user_id\" value={userId} onChange={event => setUserId(event.target.value)} />\n      </div>\n      <button type=\"submit\">Add Injection</button>\n    </form>\n  );\n}\n\nexport default InjectionForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,eAAea,YAAYA,CAACC,KAAK,EAAE;IACjCA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,SAAS,GAAG;MAChBT,IAAI,EAAEA,IAAI;MACVE,IAAI,EAAEA,IAAI;MACVQ,OAAO,EAAEN;IACX,CAAC;IACD,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,sCAAsC,EAAEH,SAAS,CAAC;MACpFX,KAAK,CAACe,KAAK,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1Bb,OAAO,CAAC,EAAE,CAAC;MACXE,OAAO,CAAC,EAAE,CAAC;MACXE,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EAEA,oBACEnB,OAAA;IAAMqB,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAOuB,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnC3B,OAAA;QAAOI,IAAI,EAAC,MAAM;QAACwB,EAAE,EAAC,MAAM;QAACC,KAAK,EAAEzB,IAAK;QAAC0B,QAAQ,EAAEnB,KAAK,IAAIN,OAAO,CAACM,KAAK,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxF,eACN3B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAOuB,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnC3B,OAAA;QAAOI,IAAI,EAAC,MAAM;QAACwB,EAAE,EAAC,MAAM;QAACC,KAAK,EAAEvB,IAAK;QAACwB,QAAQ,EAAEnB,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxF,eACN3B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAOuB,OAAO,EAAC,SAAS;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACzC3B,OAAA;QAAOI,IAAI,EAAC,MAAM;QAACwB,EAAE,EAAC,SAAS;QAACC,KAAK,EAAErB,MAAO;QAACsB,QAAQ,EAAEnB,KAAK,IAAIF,SAAS,CAACE,KAAK,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/F,eACN3B,OAAA;MAAQI,IAAI,EAAC,QAAQ;MAAAkB,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvC;AAEX;AAACxB,EAAA,CAxCQF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}